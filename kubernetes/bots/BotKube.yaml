---
apiVersion: v1
kind: Namespace
metadata:
  name: bot
---
# Configmap
apiVersion: v1
kind: ConfigMap
metadata:
  name: botkube-configmap
  namespace: bot
  labels:
    app: botkube
data:
  resource_config.yaml: |
    ## Resources you want to watch
    resources:
      - name: pod                # Name of the resources e.g pod, deployment, ingress, etc. (Resource name must be in singular form)
        namespaces:
          include:
            - all
          ignore:                 # List of namespaces to be ignored (omitempty), used only with include: all
            -                     # example : include [all], ignore [x,y,z]
        events:                   # List of lifecycle events you want to receive, e.g create, update, delete, error OR all
          - create
          - delete
          - error
      - name: service
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - delete
          - error
      - name: deployment
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - update
          - delete
          - error
        updateSetting:
          includeDiff: true
          fields:
            - spec.template.spec.containers[*].image
            - status.availableReplicas
      - name: statefulset
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - update
          - delete
          - error
        updateSetting:
          includeDiff: true
          fields:
            - spec.template.spec.containers[*].image
            - status.readyReplicas
      - name: ingress
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - delete
          - error
      - name: node
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - delete
          - error
      - name: namespace
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - delete
          - error
      - name: persistentvolume
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - delete
          - error
      - name: persistentvolumeclaim
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - delete
          - error
      - name: configmap
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - delete
          - error
      - name: daemonset
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - update
          - delete
          - error
        updateSetting:
          includeDiff: true
          fields:
            - spec.template.spec.containers[*].image
            - status.numberReady
      - name: job
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - update
          - delete
          - error
        updateSetting:
          includeDiff: true
          fields:
            - spec.template.spec.containers[*].image
            - status.conditions[*].type
      - name: role
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - delete
          - error
      - name: rolebinding
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - delete
          - error
      - name: clusterrole
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - delete
          - error
      - name: clusterrolebinding
        namespaces:
          include:
            - all
          ignore:
            -
        events:
          - create
          - delete
          - error

    # Check true if you want to receive recommendations
    # about the best practices for the created resource
    recommendations: true

    # Setting to support multiple clusters
    settings:
      # Cluster name to differentiate incoming messages
      clustername: csuos_cluster
      # Set true to enable kubectl commands execution
      allowkubectl: true
      # Set true to enable commands execution from configured channel only
      restrictAccess: true
      # Set true to enable config watcher
      configwatcher: true
      # Set false to disable upgrade notification
      upgradeNotifier: true
---
# secret
apiVersion: v1
kind: Secret
metadata:
  name: botkube-communication-secret
  namespace: bot
  labels:
    app: botkube
type: Opaque
stringData:
  comm_config.yaml: |
    # Communication settings
    communications:
      # Settings for Slack
      slack:
        enabled: true
        channel: 'server'
        token: 'xoxb-1352169109668-1345997818530-7Ah7YnUIvKXLP3jeEZeMXlxI'
        notiftype: short                            # Change notification type short/long you want to receive. notiftype is optional and Default notification type is short (if not specified)
---
# serviceaccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: botkube-sa
  namespace: bot
  labels:
    app: botkube
---
# Source: botkube/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: botkube-clusterrole
  labels:
    app: botkube
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "watch", "list"]
---
# clusterrolebinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: botkube-clusterrolebinding
  labels:
    app: botkube
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: botkube-clusterrole
subjects:
- kind: ServiceAccount
  name: botkube-sa
  namespace: bot
---
# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: botkube
  namespace: bot
  labels:
    component: controller
    app: botkube
spec:
  replicas: 1
  selector:
    matchLabels:
      component: controller
      app: botkube
  template:
    metadata:
      labels:
        component: controller
        app: botkube
    spec:
      serviceAccountName: botkube-sa
      containers:
        - name: botkube
          image: "infracloudio/botkube:v0.10.0"
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: "/config"
          env:
            - name: CONFIG_PATH
              value: "/config/"
            # set one of the log levels- info, warn, debug, error, fatal, panic
            - name: LOG_LEVEL
              value: "info"
            # set BotKube release version
            - name: BOTKUBE_VERSION
              value: v0.10.0
      volumes:
        - name: config-volume
          projected:
            sources:
            - configMap:
                name: botkube-configmap
            - secret:
                name: botkube-communication-secret
      # run as non privilaged user
      securityContext:
        runAsUser: 101
        runAsGroup: 101